name: Test cron env on multiple OSes via Docker

on:
  workflow_dispatch:

jobs:
  cron-docker:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        image:
          - ubuntu:22.04
          - debian:bullseye
          - alpine:3.18
          - rockylinux:9
    name: ${{ matrix.image }}
    
    steps:
      - name: Checkout (dummy)
        uses: actions/checkout@v4

      - name: Run container and extract cron env
        run: |
          set -eux
          IMAGE=${{ matrix.image }}
          CONTAINER=cron-test

          # 作業用スクリプトを作成
          cat <<'EOF' > setup-cron.sh
          #!/bin/bash
          set -eux
          # 各種パッケージマネージャーに応じてcronをインストール
          if command -v apt-get >/dev/null 2>&1; then
            apt-get update && apt-get install -y cron
          elif command -v apk >/dev/null 2>&1; then
            apk update && apk add --no-cache dcron
          elif command -v yum >/dev/null 2>&1; then
            yum install -y cronie
          fi

          # ユーザーのcrontabにcronジョブを登録
          echo "* * * * * env > /host/hoge.txt" | crontab -

          # cronデーモンをバックグラウンドで起動
          if command -v crond >/dev/null 2>&1; then
            crond -l 2 -f &
          else
            service cron start
          fi

          sleep 61
          chmod +x setup-cron.sh

          # Dockerコンテナを起動：ホスト側のカレントディレクトリを /host にマウント
          docker run --rm -v "$PWD":/host --name $CONTAINER $IMAGE /host/setup-cron.sh || true

      - name: Show env from cron
        run: |
          echo "::group::Dump cron env output from ${{ matrix.image }}"
          cat ./tmp/hoge.txt || echo "env not found"
          echo "::endgroup::"
